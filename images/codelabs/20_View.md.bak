summary: Building a View - Kotlin
id: building-a-view
categories: MVVM tutorial
status: Published
authors: Sean Jin Han
Feedback Link: https://sagaj.io

# ANDROID MVVM - part 1 UI

## Welcome
Duration: 1

```
This is the first part of android MVVM implementation tutorial that will cover UI implementation without ViewModel and Model. 
```

This is the first part of android MVVM implementation tutorial that will cover UI implementation without ViewModel and Model. 

For complete detail about this tutorial, see the [MVVM tutorial](www.ubimemes.com)

Note:  This guidance is intended to help beginners to understand how android MVVM works and if >you are higher level of that, you may want to skip this part and go to next tutorial.

type `nano`
[Ubimemes](http://www.ubimemes.com)

If you run into any issues (code bugs, grammatical errors, unclear wording, etc.) as you work through this codelab, please report the issue via the 'Report a mistake' link in the lower left corner of the codelab.

### Introduction

안드로이드 View(UI)는 Activity와 Fragment로 구성됨.
A Fragment is a self-contained component with its own user interface (UI) and lifecycle that can be reused in different parts of an app's UI. (A Fragment can also be used without a UI, in order to retain values across configuration changes, but this lesson does not cover that usage.)

A Fragment can be a static part of the UI of an Activity, which means that the Fragment remains on the screen during the entire lifecycle of the Activity. However, the UI of an Activity may be more effective if it adds or removes the Fragment dynamically while the Activity is running.

One example of a dynamic Fragment is the DatePicker object, which is an instance of DialogFragment, a subclass of Fragment. The date picker displays a dialog window floating on top of its Activity window when a user taps a button or an action occurs. The user can click OK or Cancel to close the Fragment.

![Date Picker Fragment](assets/images/MVVM_UI_Fragment01.png)

building a view only - no data is attached at this step

You'll learn about Navigation Component

### What you should already know
You should be able to:
- Create and run apps in Android Studio.
- Use the layout editor to create a UI with a ConstraintLayout

### What you'll learn
- Add a Fragment to the layout of an Activity
- Create a Navigation component

### What you'll do

- Create Fragments to use as a UI element.
- Add a RecyclerView to show word list
- Add interactive elements to the Fragments that users can navigate among them

## App overview
Duration: 1
aaaaa

## Task 1. Create an Activity and include Fragments 
Duration: 10

### Create MainActivity
```
class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)
    }
}
```
### Edit XML layout (activity_main.xml)
delete Hello World TextView and add navigation framework


Your `activity_main.xml` file looks like below.
```
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout 
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <fragment
        android:id="@+id/nav_host_fragment"
        android:name="androidx.navigation.fragment.NavHostFragment"
        app:layout_constraintBottom_toBottomOf="parent"
        app:defaultNavHost="true"
        app:navGraph="@navigation/main"
        android:layout_width="match_parent"
        android:layout_height="match_parent" />

</androidx.constraintlayout.widget.ConstraintLayout>
```
>Android Studio gives you an error for `NavHostFragment` since you didn't update gradle files for Android Navigation component yet. Later in this tutorial, you will update gradle files and the error will be gone.

### Update gradle files
This tutorial is experimented on version 2.3.0-alpha01 of navigation-fragment and if you use different version of it, the result may happen to be different. 
```
def nav_version = '2.3.0-alpha01'           // define the version of navigation-fragment

...

implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
...

```
### Create Fragments
You will create three Fragments as below.
  - MainFragment
  - WordListFragment
  - WordDetailFragment

### Add a RecyclerView to a Fragment

### Create an Adapter for RecyclerView

## Task 2. Navigations between Fragments
Duration: 10

### Create Navigation XML


## Summary
Duration: 1

## Further explorations (or Learn more)
Duration: 5

## Create your app 
Duration: 1

## Create UI (Add XML layout)
Duration: 1

## Building a View - Kotlin
Duration: 1

### 화면구성
- 1 Activity & 3 Fragments
  - MainActivity
  - MainFragment
  - WordListFragment
  - WordDetailFragment

## MainActivity
Duration: 1

## MainFragment
Duration: 1

## WordListFragment
Duration: 1

### Build WordListFragment class

### Build WordListAdapter 

## WordDetailFragment
Duration: 1

### Build WordDetailFragment class

### Build WordDetailAdapter 

## Navigation 
Duration: 1
Combine 3 fragments to navigate between them

### create navigation file(main.xml)
